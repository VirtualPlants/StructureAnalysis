#---------------------------------------#Transformation of a MTG from newmtg en Type TreeGraph#---------------------------------------from openalea.mtg.algo import descendantsfrom openalea.tree_matching import TreeGraphdef mtg2treegraph(mtg,scale = 1, root = None):    tree = TreeGraph()        if root is None:         # take first root of mtg at the given scale        root = mtg.components_at_scale(mtg.root,scale=scale).next()        if mtg.scale(root) != scale:        root = mtg.components_at_scale(root,scale=scale).next()         idmap = {}    id = 0    for n in descendants(mtg,root):        fid = mtg.parent(n)        if fid: fid = idmap[fid]        else: fid = -1        tree.addNode(id,fid)        idmap[n] = id        id += 1        return tree, idmap